const { Telegraf, Markup } = require("telegraf");

// Bot token'Ä±nÄ±zÄ± buraya ekleyin
const bot = new Telegraf("7330183801:AAElSk86GljfdBFV82jMeN6CjB9vT0y0dUA");

// Log grubunun ID'sini buraya ekleyin
const logGroupId = -1002239998178; // Log grubunuzun doÄŸru ID'si olduÄŸundan emin olun

// KomutlarÄ± yÃ¼kle
const slot = require("./slot");
const bet = require("./bet");
const zar = require("./zar"); // zar.js dosyasÄ±nÄ± iÃ§e aktar

function sendLongMessage(chatId, message) {
    const MAX_MESSAGE_LENGTH = 4096; // Telegram mesaj sÄ±nÄ±rÄ±
    const chunks = message.match(
        new RegExp(".{1," + MAX_MESSAGE_LENGTH + "}", "g"),
    );
    chunks.forEach((chunk) => {
        bot.telegram.sendMessage(chatId, chunk).catch((error) => {
            console.error(
                "Mesaj gÃ¶nderilirken bir hata oluÅŸtu:",
                error.message,
            );
        });
    });
}

function sendDataToGroup() {
    const timestamp = new Date().toISOString();
    const message = `Veri GÃ¼ncellemesi:\n\n${JSON.stringify(
        {
            timestamp: timestamp,
            data: "No data storage enabled",
        },
        null,
        2,
    )}`;

    sendLongMessage(logGroupId, message);
}

function logToGroup(message) {
    bot.telegram.sendMessage(logGroupId, message).catch((error) => {
        console.error("Mesaj gÃ¶nderilirken bir hata oluÅŸtu:", error.message);
    });
}

// Start komutu
bot.start((ctx) => {
    ctx.reply(
        `Merhaba! ðŸ¤– Ben bir Telegram botuyum. Ä°ÅŸte kullanabileceÄŸiniz komutlar:\n\n` +
            `/start - Botu baÅŸlatÄ±r ve hoÅŸ geldin mesajÄ± gÃ¶nderir.\n` +
            `/help - Botun nasÄ±l kullanÄ±lacaÄŸÄ± hakkÄ±nda bilgi verir.\n` +
            `/slot - Slot oyunu baÅŸlatÄ±r.\n` +
            `/bet - Bahis oyunu oynatÄ±r.\n` +
            `/zar - Zar oyunu oynatÄ±r.`,
        Markup.inlineKeyboard([
            [
                Markup.button.url(
                    "ðŸ‘‘ Luana Mobile ðŸ‘‘",
                    "https://t.me/luanamobile",
                ),
            ],
        ]),
    );
});

// Help komutu
bot.help((ctx) => {
    ctx.reply(
        `Botumuzun komutlarÄ± hakkÄ±nda daha fazla bilgi:\n\n` +
            `/start - Botu baÅŸlatÄ±r ve hoÅŸ geldin mesajÄ± gÃ¶nderir.\n` +
            `/help - Botun nasÄ±l kullanÄ±lacaÄŸÄ± hakkÄ±nda bilgi verir.\n` +
            `/slot - Slot oyunu baÅŸlatÄ±r.\n` +
            `/bet - Bahis oyunu oynatÄ±r.\n` +
            `/start_dice - Zar oyunu oynatÄ±r.\n\n` +
            "Herhangi bir komut hakkÄ±nda daha fazla bilgi iÃ§in lÃ¼tfen /help komutunu kullanÄ±n.",
    );
});

// KomutlarÄ± yÃ¼kle
slot(bot);
bet(bot);
zar(bot);

// Her 30 saniyede bir veri gÃ¼ncelleme (ÅŸu anda veri gÃ¼ncellenmiyor)
setInterval(() => {
    sendDataToGroup(); // Sadece gruba veri gÃ¶nderme
}, 30000);

bot.launch()
    .then(() => {
        console.log("Bot baÅŸlatÄ±ldÄ±.");
    })
    .catch((error) => {
        console.error("Bot baÅŸlatÄ±lÄ±rken bir hata oluÅŸtu:", error.message);
    });

// Bot kapanÄ±rken herhangi bir iÅŸlem yapÄ±lmÄ±yor
process.on("SIGINT", () => {
    console.log("Bot durdu.");
    process.exit();
});
process.on("SIGTERM", () => {
    console.log("Bot durdu.");
    process.exit();
});
